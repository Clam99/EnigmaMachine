import java.util.*;

public class Rotor {
    private char[] inAlphabet;
    private char[] outAlphabet;
    private int start;

    public Rotor(int num, int s) {
        inAlphabet = new char[26];
        outAlphabet = new char[26];
        start = s;
        for (int i = 0; i<26; i++) {
            inAlphabet[i] = (char)(65+i);
        }
        switch (num) {
            case 1:
                outAlphabet = "EKMFLGDQVZNTOWYHXUSPAIBRCJ".toCharArray();
                break;
            case 2:
                outAlphabet = "AJDKSIRUXBLHWTMCQGZNPYFVOE".toCharArray();
                break;
            case 3:
                outAlphabet = "BDFHJLCPRTXVZNYEIWGAKMUSQO".toCharArray();
                break;
            case 4:
                outAlphabet = "ESOVPZJAYQUIRHXLNFTGKDCMWB".toCharArray();
                break;
            case 5:
                outAlphabet = "VZBRGITYUPSDNHLXAWMJQOFECK".toCharArray();
                break;
            default:
                break;
        }
    }
    public char getOutput(char c) {
        int i = Arrays.asList(inAlphabet).indexOf(c);
        if (i!=-1) {
            i += start;
            return outAlphabet[i];
        }
        else {
            System.out.println("Something has gone terribly wrong.");
            return 'A';
        }
    }
    public char getReversedOutput(char c) {
        int i = Arrays.asList(outAlphabet).indexOf(c);
        if (i!=-1) {
            i -= start;
            return inAlphabet[i];
        }
        else {
            System.out.println("Something has gone terribly wrong.");
            return 'A';
        }
    }
}
