import java.util.*;

public class Rotor {
    private char[] inAlphabet;
    private char[] outAlphabet;
    private int start;
    private boolean isReflector;

    public Rotor(int num, int s, boolean reflect) {
        inAlphabet = new char[26];
        outAlphabet = new char[26];
        start = s;
        isReflector = reflect;
        for (int i = 0; i<26; i++) {
            inAlphabet[i] = (char)(65+i);
        }
        if (isReflector) {
            start = 0;//force start to be zero if reflector
            if (num == 1) {
                outAlphabet = "YRUHQSLDPXNGOKMIEBFZCWVJAT".toCharArray();
            }
            else {
                outAlphabet = "FVPJIAOYEDRZXWGCTKUQSBNMHL".toCharArray();
            }
        }
        else {
            switch (num) {
                case 1:
                    outAlphabet = "EKMFLGDQVZNTOWYHXUSPAIBRCJ".toCharArray();
                    break;
                case 2:
                    outAlphabet = "AJDKSIRUXBLHWTMCQGZNPYFVOE".toCharArray();
                    break;
                case 3:
                    outAlphabet = "BDFHJLCPRTXVZNYEIWGAKMUSQO".toCharArray();
                    break;
                case 4:
                    outAlphabet = "ESOVPZJAYQUIRHXLNFTGKDCMWB".toCharArray();
                    break;
                default:
                    outAlphabet = "VZBRGITYUPSDNHLXAWMJQOFECK".toCharArray();
                    break;
            }
        }
    }
    public char getOutput(char c) {
        int i = new String(inAlphabet).indexOf(Character.toString(c));
        if (i!=-1) {
            i += start;
            i = i%26;
            return outAlphabet[i];
        }
        else {
            System.out.println("Something has gone terribly wrong: " + Character.toString(c));
            System.out.println("Here's the alphabet: " + Arrays.toString(inAlphabet));
            return 'A';
        }
    }
    public char getReversedOutput(char c) {
        int i = new String(outAlphabet).indexOf(Character.toString(c));
        if (i!=-1) {
            i -= start;
            i += 26;
            i = i%26;
            return inAlphabet[i];
        }
        else {
            System.out.println("Something has gone terribly wrong: " + Character.toString(c));
            System.out.println("Here's the alphabet: " + Arrays.toString(outAlphabet));
            return 'A';
        }
    }
    public void increment() {
        if (start == 25) {
            start = 0;
        }
        else { start++; }
    }
    public int getPosition() {
        return start;
    }
}
